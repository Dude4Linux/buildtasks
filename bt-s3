#!/bin/bash -e

fatal() { echo "FATAL [$(basename $0)]: $@" 1>&2; exit 1; }
info() { echo "INFO [$(basename $0)]: $@"; }

usage() {
cat<<EOF
Syntax: $(basename $0) appname
Converts appliance appname (e.g., core) to ec2 s3 backed ami

Environment::

    BT_VERSION          - appliance version (e.g., 11.2-lucid-x86)
    BT_PUBLISH          - if set, image will be devpay'ed and made public

    BT_DEBUG            - turn on debugging
EOF
exit 1
}

if [[ "$#" != "1" ]]; then
    usage
fi

[ -n "$BT_DEBUG" ] && set -x

export BT=$(dirname `pwd`/$(basename $0))
export BT_CONFIG=$BT/config
. $BT_CONFIG/common.cfg
. $BT_CONFIG/build.cfg
. $BT_CONFIG/ec2.cfg

export ZONE=$(ec2metadata --availability-zone)
export REGION=$(echo -n $ZONE | head -c -1)
case "$REGION" in
    "us-east-1")
        export KERNEL=$USEAST_KERNEL
        export BUCKET=$USEAST_BUCKET
        export LOCATION="US"
        ;;
    "us-west-1")
        export KERNEL=$USWEST_KERNEL
        export BUCKET=$USWEST_BUCKET
        export LOCATION="us-west-1"
        ;;
    "eu-west-1")
        export KERNEL=$EUWEST_KERNEL
        export BUCKET=$EUWEST_BUCKET
        export LOCATION="EU"
        ;;
    "ap-southeast-1")
        export KERNEL=$APSOUTHEAST_KERNEL
        export BUCKET=$APSOUTHEAST_BUCKET
        export LOCATION="ap-southeast-1"
        ;;
    *)
        fatal "unrecognized region: $REGION"
esac

O=$BT_BUILDS/s3
mkdir -p $O

appname=$1

[ -n "$BT_VERSION" ] || fatal "BT_VERSION not set"

isofile=turnkey-$appname-$BT_VERSION.iso
name=turnkey-$appname-$BT_VERSION
rootfs=$name.rootfs
cdroot=$name.cdroot
ami_name=$name.ami

$BT/bin/iso-download $appname $BT_VERSION $BT_ISOS
$BT/bin/iso-verify $appname $BT_VERSION $BT_ISOS

cd $O
tklpatch-extract-iso $BT_ISOS/$isofile

tklpatch-apply $rootfs $BT/patches/ec2

$BT/bin/aptconf-tag $rootfs s3

$BT/bin/s3-bundle $rootfs $ami_name
$BT/bin/s3-register $ami_name.manifest.xml

# only publish if specifically set
[ -n "$BT_PUBLISH" ] && $BT/bin/s3-publish $ami_name

if [ -z "$BT_DEBUG" ] && ! (mount | grep -q $(basename $rootfs)); then
    rm -rf $rootfs
    rm -rf $cdroot
fi
