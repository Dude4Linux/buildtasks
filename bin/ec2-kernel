#!/usr/bin/python
"""
Displays Amazon Kernel Image (AKI) ID for region and architecture

Arguments:

    REGION          Amazon Region
    ARCHITECTURE    Architecture (i386, amd64)
"""
import sys
import getopt

def usage(e=None):
    if e:
        print >> sys.stderr, "error: " + str(e)

    print >> sys.stderr, "Syntax: %s REGION ARCHITECTURE" % sys.argv[0]
    print >> sys.stderr, __doc__.strip()
    sys.exit(1)

KERNELS = { 
    # http://go.alonswartz.org/aws-kernels (pv-grub-hd0_1.03)
    'us-east-1': {'amd64': 'aki-88aa75e1', 'i386': 'aki-b6aa75df'},
    'us-west-1': {'amd64': 'aki-f77e26b2', 'i386': 'aki-f57e26b0'},
    'us-west-2': {'amd64': 'aki-fc37bacc', 'i386': 'aki-fa37baca'},
    'eu-west-1': {'amd64': 'aki-71665e05', 'i386': 'aki-75665e01'},
    'sa-east-1': {'amd64': 'aki-c48f51d9', 'i386': 'aki-ca8f51d7'},
    'ap-southeast-1': {'amd64': 'aki-fe1354ac', 'i386': 'aki-f81354aa'},
    'ap-northeast-1': {'amd64': 'aki-44992845', 'i386': 'aki-42992843'},
}

def main():
    try:
        opts, args = getopt.gnu_getopt(sys.argv[1:], "h", ["help"])
    except getopt.GetoptError, e:
        usage(e)

    if len(args) != 2:
        usage()

    region = args[0]
    architecture = args[1]

    print KERNELS[region][architecture]

if __name__ == '__main__':
    main()

